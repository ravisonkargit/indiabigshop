{"version":3,"sources":["components/live-chat/chatbox.jsx"],"names":["s","Main","lazy","Promise","all","__webpack_require__","e","then","bind","ChatBox","props","_this","Object","_Users_apple_Desktop_indiabigshop_react_beldara_com_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_apple_Desktop_indiabigshop_react_beldara_com_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_apple_Desktop_indiabigshop_react_beldara_com_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","chatWithSupplier","undefined","name","v","document","cookie","match","getCookie","window","localStorage","setItem","console","log","chatToSeller","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","react__WEBPACK_IMPORTED_MODULE_5__","fallback","item","product","Component","connect","chat"],"mappings":"sGA0BIA,oFACJ,IAAMC,EAAOC,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,GAAAD,EAAAC,EAAA,IAAAD,EAAAC,EAAA,IAAAD,EAAAC,EAAA,MAAAC,KAAAF,EAAAG,KAAA,aACjBC,cACL,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,kBAAiB,GAHFR,wFAUPS,KADVpB,EA/BJ,SAAmBqB,GACjB,IAAIC,EAAIC,SAASC,OAAOC,MAAM,UAAYJ,EAAO,iBACjD,OAAOC,EAAIA,EAAE,GAAK,KA6BZI,CAAU,aAGZC,OAAOC,aAAaC,QAAQ,SAAU7B,yFAsBxC,OAHA8B,QAAQC,IAAIjB,KAAKJ,MAAMsB,cAIrBC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,4BACNH,EAAAC,EAAAC,cAACE,EAAA,SAAD,CAAUC,SAAU,WAClBL,EAAAC,EAAAC,cAAClC,EAAD,CAAMsC,KAAMzB,KAAKJ,MAAM8B,QAASrB,iBAAkBL,KAAKJ,MAAMS,iBAAkBa,eAAclB,KAAKJ,MAAMsB,cAAelB,KAAKJ,MAAMsB,wBAtCrHS,aA+CRC,4BAHS,SAACxB,GAAD,MAAY,CAClCc,aAAad,EAAMyB,KAAKX,eAEXU,CAAyBjC","file":"static/js/10.541e8680.chunk.js","sourcesContent":["import React, { Component, Suspense, lazy } from 'react'\nimport $ from 'jquery'\nimport axios from 'axios'\nimport { imgUrl } from \"../../constants/variable\";\nimport { connect } from \"react-redux\";\n\nvar jsonp_url = \"https://chat.beldara.com\";\nfunction getCookie(name) {\n  var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n  return v ? v[2] : null;\n}\nfunction getUrlVars() {\n  var vars = {};\n  var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {\n    vars[key] = value;\n  });\n  return vars;\n}\nfunction getUrlParam(parameter, defaultvalue) {\n  var urlparameter = defaultvalue;\n  if (window.location.href.indexOf(parameter) > -1) {\n    urlparameter = getUrlVars()[parameter];\n  }\n  // console.log(urlparameter)\n  return urlparameter;\n}\nvar s, param;\nconst Main = lazy(() => import('../chatbox/main'))\n class ChatBox extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      chatWithSupplier:false\n    }\n  }\n  componentDidMount() {\n    // s = getUrlParam('s', undefined);\n    // console.log(param)\n    s = getCookie('mhinpbn')\n    if (s !== undefined) {\n      // console.log(param)\n      window.localStorage.setItem('log_id', s)\n    }\n  }\n  componentWillReceiveProps(){\n    // if(this.props.chatWithSupplier!==false && this.state.chatWithSupplier===false) {\n    //   this.setState({\n    //     chatWithSupplier:this.props.chatWithSupplier\n    //   })\n    // }\n  }\n  // componentDidUpdate = async () => {\n  //   if(this.props.chatWithSupplier && !this.state.chatWithSupplier) {\n  //     console.log(this.props,'componentDidupdate')\n  //     await this.setState({\n  //       chatWithSupplier:this.props.chatWithSupplier\n  //     })\n  //   }\n  // }\n  render() {\n    console.log(this.props.chatToSeller)\n    // const { chatWithSupplier } = this.props\n    // console.log(chatWithSupplier)\n    return (\n      <div id=\"example-widget-container\">\n        <Suspense fallback={'Loading'}>\n          <Main item={this.props.product} chatWithSupplier={this.props.chatWithSupplier} chatToSeller={this.props.chatToSeller ? this.props.chatToSeller:false}/>\n        </Suspense>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => ({\n  chatToSeller:state.chat.chatToSeller\n})\nexport default connect(mapStateToProps)(ChatBox);"],"sourceRoot":""}