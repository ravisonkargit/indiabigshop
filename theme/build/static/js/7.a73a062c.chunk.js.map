{"version":3,"sources":["components/collection/common/priceCalc.jsx"],"names":["start_price","end_price","symbol","PriceCalc","props","_this","Object","_Users_apple_Desktop_indiabigshop_react_beldara_com_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_apple_Desktop_indiabigshop_react_beldara_com_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_apple_Desktop_indiabigshop_react_beldara_com_theme_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","prodCost","productCost","e","state","getPrice","console","log","nextProps","data","country_code","getCookie","price_in","price_us","inrValue","minqty","undefined","isNaN","currencyValue","INR","parseFloat","toLowerCase","Math","round","toFixed","finalCost","setState","_this$state","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","className","Intl","NumberFormat","format","weight","Component","connect","getAllCurrencyValue"],"mappings":"qGAKIA,EAAaC,EAAWC,iFACtBC,cAEF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAwIVQ,SAAW,SAACZ,GACR,IACAK,EAAKD,MAAMS,YAAYb,GACtB,MAAMc,MA1IPT,EAAKU,MAAQ,CACTf,YAAc,GACdC,UAAY,GACZC,OAAS,IALCG,mFAcdG,KAAKQ,SAASR,KAAKJ,OACnBa,QAAQC,IAAIV,KAAKJ,gEAGYe,GAEzBA,EAAUC,KAAKlB,SAAWM,KAAKJ,MAAMgB,KAAKlB,QAAUiB,EAAUnB,cAAgBQ,KAAKJ,MAAMJ,aACzFQ,KAAKQ,SAASG,GAEfX,KAAKJ,MAAMiB,cAAgBC,YAAU,iBACpCd,KAAKQ,SAASG,oCAIbA,GACL,IAAII,EAAUC,EAAUC,EACpBC,EACJ,IAEQA,OADkBC,IAArBR,EAAUO,QAAwBE,MAAMT,EAAUO,SAA+B,MAApBP,EAAUO,QAAsC,GAApBP,EAAUO,QAAmC,KAApBP,EAAUO,OAChH,EACCP,EAAUO,OAC3B,MAAMZ,GACHY,EAAS,EAEb,IAEQH,OADoBI,IAAvBR,EAAUI,UAA0BK,MAAMT,EAAUI,WAAmC,MAAtBJ,EAAUI,SAC7D,EACCJ,EAAUI,SAC7B,MAAMT,GACHS,EAAW,EAEf,IAEIC,OADoBG,IAAvBR,EAAUK,UAA0BI,MAAMT,EAAUK,WAAmC,MAAtBL,EAAUK,SAC7D,EACCL,EAAUK,SACzB,MAAMV,GACHU,EAAW,EAEf,IAEIC,OAD8CE,IAAjDR,EAAUU,cAAcA,cAAc,GAAGC,KAAqBF,MAAMT,EAAUU,cAAcA,cAAc,GAAGC,MAAwD,MAAhDX,EAAUU,cAAcA,cAAc,GAAGC,IAChJ,EACCX,EAAUU,cAAcA,cAAc,GAAGC,IACxD,MAAMhB,GACHW,EAAW,EAGf,IAEIzB,OADuB2B,IAA1BR,EAAUnB,aAA6B4B,MAAMT,EAAUnB,cAA0C,OAA1BmB,EAAUnB,YAChE,EACCmB,EAAUnB,YAC5B,MAAMc,GACHd,EAAc,EAGlB,IAEQC,OADqB0B,IAAxBR,EAAUlB,WAA2B2B,MAAMT,EAAUlB,YAAsC,OAAxBkB,EAAUlB,WAAsB8B,WAAWZ,EAAUlB,WAAa8B,WAAW,GACjI,EACCZ,EAAUlB,UAC1B,MAAMa,GACHb,EAAY,EAGpB,IAAIoB,EAAeC,YAAU,gBAE7B,IAC6B,OAApBH,EAAUjB,QAAuC,IAApBiB,EAAUjB,QAAoC,MAApBiB,EAAUjB,aAAuCyB,IAArBR,EAAUjB,QAAkD,OAAzBiB,EAAUC,KAAKlB,OAI3G,OAApBiB,EAAUjB,QAA4C,OAAzBiB,EAAUC,KAAKlB,QACnDF,EAAc+B,WAAW/B,EAAcyB,GACvCxB,EAAY8B,WAAW9B,EAAYwB,GACnCvB,EAAS,OACFiB,EAAUjB,SAAWiB,EAAUC,KAAKlB,QAC3CF,EAAc+B,WAAW/B,GACzBC,EAAY8B,WAAW9B,GACvBC,EAASiB,EAAUC,KAAKlB,SAExBF,EAAc+B,WAAYZ,EAAUnB,aACpCC,EAAY8B,WAAYZ,EAAUlB,WAClCC,EAAS,QAdTF,EAAc+B,WAAW/B,EAAcyB,GACvCxB,EAAY8B,WAAW9B,EAAYwB,GACnCvB,EAAS,OAeO,IAAhBmB,GAAoD,MAA9BA,EAAaW,gBACnChC,EAAc+B,WAAY/B,EAAgBuB,EAAS,IAAOvB,GAC1DC,EAAY8B,WAAW9B,EAAcsB,EAAS,IAAOtB,IAGtB,MAA9BoB,EAAaW,gBACdhC,EAAc+B,WAAW/B,EAAgBwB,EAAS,IAAOxB,GACzDC,EAAY8B,WAAW9B,EAAcuB,EAAS,IAAOvB,IAEzDD,EAAciC,KAAKC,MAAoB,IAAdlC,GAAqB,IAC9CC,EAAYgC,KAAKC,MAAkB,IAAZjC,GAAmB,IAC7C,MAAMa,GACHd,EAAc,gBACdC,EAAY,GACZC,EAAS,GAGbF,EAAcA,EAAYmC,QAAQ,GAClClC,EAAYA,EAAUkC,QAAQ,SAEVR,IAAhB3B,GAA6B4B,MAAM5B,IAAgC,OAAhBA,KACvDA,EAAc,SAEI2B,IAAd1B,GAA2B2B,MAAM3B,IAA4B,OAAdA,KAC/CA,EAAY,GAEhB,IACIO,KAAKJ,MAAMgC,UAAUpC,EAAa0B,GACrC,MAAMZ,IAIPN,KAAK6B,SAAS,CACVrC,YAAcA,EACdC,UAAYA,EACZC,OAASA,qCAaR,IAAAoC,EAEoC9B,KAAKO,MAAvCf,EAFFsC,EAEEtC,YAAaE,EAFfoC,EAEepC,OAAQD,EAFvBqC,EAEuBrC,UAE5B,OADAgB,QAAQC,IAAIV,KAAKJ,OAcbmC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,gBACqBd,IAAhB3B,GAA4C,aAAfA,EAC5B+B,WAAW/B,GAAe+B,WAAW9B,IAAc8B,WAAW9B,GAAa8B,WAAW,GAChFQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,IAAoE,IAA1BZ,WAAW9B,GAAsBC,EAAS,KAAM,IAAI0C,KAAKC,cAAeC,OAAO7C,GAAa,iBAC3I8B,WAAW/B,GAAgB+B,WAAW,IAAMA,WAAW9B,GAAc8B,WAAW,GAC3EQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,IAAuE,IAA5BZ,WAAW/B,GAAwBE,EAAS,KAAM,IAAI0C,KAAKC,cAAeC,OAAO9C,GAAe,GAA3I,KACL+B,WAAW/B,GAAgB+B,WAAW,GACrCQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,IAAuE,IAA5BZ,WAAW/B,GAAwBE,EAAS,KAAM,IAAI0C,KAAKC,cAAeC,OAAO9C,GAAe,gBAA3I,KACD+B,WAAW9B,GAAc8B,WAAW,GACnCQ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BAAf,IAAqE,IAA1BZ,WAAW9B,GAAsBC,EAAS,KAAM,IAAI0C,KAAKC,cAAeC,OAAO7C,GAAa,gBAAvI,KACFsC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAf,IAAgE,IAA5BZ,WAAW/B,GAAwBuC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,SAAkBlC,KAAKI,SAASZ,GAAhC,IAA+CE,EAAS,KAAM,IAAI0C,KAAKC,cAAeC,OAAO9C,GAA7F,KAA8H,iBACtM,IAELuC,EAAAC,EAAAC,cAAA,WAAMjC,KAAKJ,MAAM2C,QACjBR,EAAAC,EAAAC,cAAA,oBAnLQO,aAqMTC,4BAHS,SAAClC,GACrB,OAAOA,GAE4B,CAACmC,yBAAzBD,CAA+C9C","file":"static/js/7.a73a062c.chunk.js","sourcesContent":["\nimport React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport {getAllCurrencyValue} from '../../../actions';\nimport { getCookie } from '../../../functions';\nvar start_price, end_price, symbol;\nclass PriceCalc extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            start_price : '',\n            end_price : '',\n            symbol : ''\n        }\n    }\n\n    // UNSAFE_componentWillMount(){\n    //     this.props.getAllCurrencyValue();\n    // }\n\n    componentDidMount(){\n        this.getPrice(this.props)\n        console.log(this.props)\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        // if (nextProps.data.symbol !== this.props.data.symbol)\n        if (nextProps.data.symbol !== this.props.data.symbol || nextProps.start_price !== this.props.start_price){\n            this.getPrice(nextProps)\n        }\n        if(this.props.country_code != getCookie('country_code')){\n            this.getPrice(nextProps)\n        }\n    }\n\n    getPrice(nextProps){\n        let price_in, price_us, inrValue;\n        var minqty;\n        try{\n            {nextProps.minqty === undefined || isNaN(nextProps.minqty) || nextProps.minqty == null || nextProps.minqty == 0 || nextProps.minqty == '0'?\n                minqty = 1\n                :minqty = nextProps.minqty }\n        }catch(e){\n            minqty = 1\n        } \n        try{\n            {nextProps.price_in === undefined || isNaN(nextProps.price_in) || nextProps.price_in == null?\n                price_in = 0\n                :price_in = nextProps.price_in }\n        }catch(e){\n            price_in = 0\n        } \n        try{ \n        {nextProps.price_us === undefined || isNaN(nextProps.price_us) || nextProps.price_us == null?\n            price_us = 0\n            :price_us = nextProps.price_us }\n        }catch(e){\n            price_us = 0\n        }  \n        try{    \n        {nextProps.currencyValue.currencyValue[0].INR === undefined || isNaN(nextProps.currencyValue.currencyValue[0].INR) || nextProps.currencyValue.currencyValue[0].INR == null?\n            inrValue = 1\n            :inrValue = nextProps.currencyValue.currencyValue[0].INR }    \n        }catch(e){\n            inrValue = 1\n        }    \n\n        try{    \n        {nextProps.start_price === undefined || isNaN(nextProps.start_price) || nextProps.start_price === null?\n            start_price = 0\n            :start_price = nextProps.start_price }    \n        }catch(e){\n            start_price = 0\n        } \n\n        try{    \n            {nextProps.end_price === undefined || isNaN(nextProps.end_price) || nextProps.end_price === null || parseFloat(nextProps.end_price) < parseFloat(0) ?\n                end_price = 0\n                :end_price = nextProps.end_price }    \n            }catch(e){\n                end_price = 0\n            } \n            \n        let country_code = getCookie('country_code');\n    \n        try{\n            if ((nextProps.symbol == 'INR' || nextProps.symbol == '' || nextProps.symbol == null || nextProps.symbol === undefined) && nextProps.data.symbol == 'USD') {\n                start_price = parseFloat(start_price / inrValue);\n                end_price = parseFloat(end_price / inrValue);\n                symbol = \"USD\";\n            } else if (nextProps.symbol == 'USD' && nextProps.data.symbol == 'INR') {\n                start_price = parseFloat(start_price * inrValue);\n                end_price = parseFloat(end_price * inrValue);\n                symbol = \"INR\";\n            } else if (nextProps.symbol === nextProps.data.symbol) {\n                start_price = parseFloat(start_price ) ;\n                end_price = parseFloat(end_price ) ;\n                symbol = nextProps.data.symbol;\n            } else {\n                start_price = parseFloat( nextProps.start_price );\n                end_price = parseFloat( nextProps.end_price );\n                symbol = \"INR\";\n            }\n            \n            if (country_code == '' || country_code.toLowerCase() == 'in'){\n                start_price = parseFloat( start_price + ((price_in/100) * start_price))\n                end_price = parseFloat(end_price + ((price_in/100) * end_price))\n            }\n\n            if ( country_code.toLowerCase() == 'us'){\n                start_price = parseFloat(start_price + ((price_us/100) * start_price))\n                end_price = parseFloat(end_price + ((price_us/100) * end_price))\n            }\n            start_price = Math.round(start_price * 100) / 100;\n            end_price = Math.round(end_price * 100) / 100;\n        }catch(e){\n            start_price = 'Ask For Price';\n            end_price = '';\n            symbol = '';\n        }\n\n        start_price = start_price.toFixed(2)\n        end_price = end_price.toFixed(2)\n\n        if (start_price === undefined || isNaN(start_price) || start_price === null)\n        start_price = 0.00\n\n        if (end_price === undefined || isNaN(end_price) || end_price === null)\n            end_price = 0.00\n\n        try{\n            this.props.finalCost(start_price, minqty);\n        }catch(e){\n\n        }\n\n        this.setState({\n            start_price : start_price,\n            end_price : end_price,\n            symbol : symbol\n        })\n\n    }\n\n    prodCost = (start_price) => {\n        try{\n        this.props.productCost(start_price);\n        }catch(e){\n            \n        }\n    }\n\n    render() {\n        // console.log('render',151);\n        const {start_price, symbol, end_price} = this.state;\n        console.log(this.props)\n        return (\n            // <React.Fragment>\n            //     <div>\n            //         {start_price !== undefined && start_price != 'undefined' ?\n            //         ( parseFloat(start_price) > parseFloat(end_price) && parseFloat(end_price) > parseFloat(0) )?\n            //                 <div className=\"font-weight-bold small\"> {parseFloat(end_price) !== 0.00 ? symbol + ' ' + end_price : 'Ask for price'} {start_price ? '-' + start_price : ''}</div>\n            //         :( parseFloat(end_price) >  parseFloat(0))?\n            //                 <div className=\"font-weight-bold small\"> { parseFloat(start_price) !== 0.00 ? symbol + ' ' + start_price : 'Ask for price'} {end_price ? '-' + end_price : ''}</div>\n            //         : <div className=\"font-weight-bold\"> {parseFloat(start_price) !== 0.00 ? <React.Fragment> {this.prodCost(start_price)} {symbol + ' ' + start_price} </React.Fragment>: 'Ask for price'}</div>\n            //         :''}\n            //     </div>\n            // </React.Fragment>\n\n            <React.Fragment>\n                <div>\n                    {start_price !== undefined && start_price != 'undefined' ?\n                    ( parseFloat(start_price) > parseFloat(end_price) && parseFloat(end_price) > parseFloat(0) )?\n                            <div className=\"font-weight-bold small\"> {parseFloat(end_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(end_price) : 'Ask for price'}</div>\n                    :( parseFloat(start_price) >  parseFloat(0) && parseFloat(end_price) >  parseFloat(0))?\n                            <div className=\"font-weight-bold small\"> { parseFloat(start_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(start_price) : ''} </div>\n                    :( parseFloat(start_price) >  parseFloat(0))?\n                        <div className=\"font-weight-bold small\"> { parseFloat(start_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(start_price) : 'Ask for price'} </div>\n                    :( parseFloat(end_price) >  parseFloat(0))?\n                        <div className=\"font-weight-bold small\"> { parseFloat(end_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(end_price) : 'Ask for price'} </div>\n                    : <div className=\"font-weight-bold\"> {parseFloat(start_price) !== 0.00 ? <React.Fragment> {this.prodCost(start_price)} {symbol + ' ' + new Intl.NumberFormat().format(start_price)} </React.Fragment>: 'Ask for price'}</div>\n                    :''}\n                </div>\n                <div>{this.props.weight}</div>\n                <div></div>\n\n                {/* <div>\n                    {start_price !== undefined && start_price != 'undefined' ?\n                    ( parseFloat(start_price) > parseFloat(end_price) && parseFloat(end_price) > parseFloat(0) )?\n                            <div className=\"font-weight-bold small\"> {parseFloat(end_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(end_price) : 'Ask for price'} {start_price ? '-' + new Intl.NumberFormat().format(start_price) : ''}</div>\n                    :( parseFloat(end_price) >  parseFloat(0))?\n                            <div className=\"font-weight-bold small\"> { parseFloat(start_price) !== 0.00 ? symbol + ' ' + new Intl.NumberFormat().format(start_price) : 'Ask for price'} {end_price ? '-' + new Intl.NumberFormat().format(end_price) : ''}</div>\n                    : <div className=\"font-weight-bold\"> {parseFloat(start_price) !== 0.00 ? <React.Fragment> {this.prodCost(start_price)} {symbol + ' ' + new Intl.NumberFormat().format(start_price)} </React.Fragment>: 'Ask for price'}</div>\n                    :''}\n                </div> */}\n            </React.Fragment>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return state;\n}\nexport default connect(mapStateToProps,{getAllCurrencyValue})(PriceCalc);\n"],"sourceRoot":""}